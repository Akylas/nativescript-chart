import { ValueFormatter } from './ValueFormatter';

/**
 * Created by philipp on 02/06/16.
 */
export class DefaultAxisValueFormatter extends ValueFormatter {
    /**
     * decimalformat for formatting
     */
    protected formatter: NSNumberFormatter;

    /**
     * the number of decimal digits this formatter uses
     */
    protected decimals;

    /**
     * Constructor that specifies to how many digits the value should be
     * formatted.
     *
     * @param decimals
     */
    constructor(decimals) {
        super();
        this.decimals = decimals;

        // let b = '';
        // for (let i = 0; i < digits; i++) {
        //     if (i == 0) b += '.';
        //     b += '0';
        // }

        this.formatter =  NSNumberFormatter.new();
        this.formatter.usesGroupingSeparator = (true);
        this.formatter.minimumFractionDigits = (decimals);
        this.formatter.maximumFractionDigits = (decimals);
    }

    public getFormattedValue(value: number) {
        // avoid memory allocations here (for performance)
        return this.formatter.stringFromNumber(value);
    }

    /**
     * Returns the number of decimal digits this formatter uses or -1, if unspecified.
     *
     * @return
     */
    public getDecimalDigits() {
        return this.decimals;
    }
}
